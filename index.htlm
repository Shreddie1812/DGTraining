<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>CargoJet Inspired Application</title>
    <!-- Tailwind CSS CDN for styling -->
    <script src="https://cdn.tailwindcss.com"></script>
    <!-- Google Font: Inter -->
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <style>
        body {
            font-family: 'Inter', sans-serif;
            /* CargoJet's primary dark blue/black, adjusted for readability */
            background-color: #1a202c; /* Dark charcoal */
            color: #e2e8f0; /* Light gray for text */
        }
        /* Custom colors based on CargoJet's branding */
        .bg-cargojet-dark {
            background-color: #0d121c; /* Very dark blue, almost black */
        }
        .text-cargojet-orange {
            color: #ff8c00; /* Bright orange, similar to their logo accent */
        }
        .bg-cargojet-orange {
            background-color: #ff8c00;
        }
        .border-cargojet-orange {
            border-color: #ff8c00;
        }
        .hover-cargojet-orange:hover {
            background-color: #e67e00; /* Slightly darker orange on hover */
        }
        /* Smooth scrolling for anchor links */
        html {
            scroll-behavior: smooth;
        }
        /* Modal styles */
        .modal {
            display: none; /* Hidden by default */
            position: fixed; /* Stay in place */
            z-index: 1000; /* Sit on top */
            left: 0;
            top: 0;
            width: 100%; /* Full width */
            height: 100%; /* Full height */
            overflow: auto; /* Enable scroll if needed */
            background-color: rgba(0,0,0,0.7); /* Black w/ opacity */
            justify-content: center;
            align-items: center;
        }
        .modal-content {
            background-color: #1a202c;
            margin: auto;
            padding: 20px;
            border-radius: 8px;
            width: 90%;
            max-width: 400px;
            box-shadow: 0 5px 15px rgba(0,0,0,0.5);
        }
        .close-button {
            color: #aaa;
            float: right;
            font-size: 28px;
            font-weight: bold;
        }
        .close-button:hover,
        .close-button:focus {
            color: #fff;
            text-decoration: none;
            cursor: pointer;
        }
    </style>
</head>
<body class="min-h-screen flex flex-col">

    <!-- Header Section -->
    <header class="bg-cargojet-dark shadow-lg py-4 px-6 md:px-12 rounded-b-lg">
        <div class="container mx-auto flex justify-between items-center">
            <!-- Logo/App Name -->
            <a href="#" class="flex items-center space-x-2">
                <!-- Simple SVG for a placeholder logo, mimicking CargoJet's style -->
                <svg width="40" height="40" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path d="M12 2L2 7V17L12 22L22 17V7L12 2Z" fill="url(#paint0_linear)" stroke="#ff8c00" stroke-width="1.5"/>
                    <path d="M12 7L17 10L12 13L7 10L12 7Z" fill="#ff8c00"/>
                    <defs>
                        <linearGradient id="paint0_linear" x1="12" y1="2" x2="12" y2="22" gradientUnits="userSpaceOnUse">
                            <stop stop-color="#0d121c"/>
                            <stop offset="1" stop-color="#1a202c"/>
                        </linearGradient>
                    </defs>
                </svg>
                <span class="text-2xl font-bold text-white">CargoJet App</span>
            </a>
            <!-- Navigation -->
            <nav class="hidden md:flex space-x-6">
                <a href="#" class="text-gray-300 hover:text-cargojet-orange transition duration-300 font-medium">Home</a>
                <!-- Updated Contact Link to scroll to section -->
                <a href="#contact-section" class="text-gray-300 hover:text-cargojet-orange transition duration-300 font-medium">Contact</a>
                <!-- Sign In Link -->
                <a href="#" id="signInButton" class="text-white bg-cargojet-orange px-4 py-2 rounded-full hover-cargojet-orange transition duration-300 font-medium cursor-pointer">Sign In</a>
            </nav>
            <!-- Mobile Menu Button (Hamburger) -->
            <button class="md:hidden text-gray-300 focus:outline-none">
                <svg class="w-8 h-8" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16m-7 6h7"></path>
                </svg>
            </button>
        </div>
    </header>

    <!-- Main Content Area -->
    <main class="flex-grow container mx-auto p-6 md:p-12">
        <!-- Dangerous Goods Training Program Welcome Page -->
        <section class="bg-gray-800 p-8 rounded-lg shadow-xl mb-8">
            <h1 class="text-4xl md:text-5xl font-extrabold text-cargojet-orange mb-4 leading-tight">
                Welcome to the Dangerous Goods Training Program!
            </h1>
            <p class="text-gray-300 text-lg mb-6">
                We're thrilled to have you join our essential training program. This course is designed to equip you with the knowledge and skills necessary to safely handle and transport dangerous goods, ensuring compliance with all international regulations.
            </p>
            <p class="text-gray-300 text-lg mb-6">
                Your commitment to safety is paramount, and this program will guide you through critical topics, including identification, classification, packaging, labeling, documentation, and emergency procedures for dangerous goods.
            </p>
            <div class="grid grid-cols-1 md:grid-cols-3 gap-6">
                <div class="bg-gray-700 p-6 rounded-md shadow-md">
                    <h2 class="text-2xl font-semibold text-white mb-3">Module 1: Classification</h2>
                    <p class="text-gray-400">Understand the different classes of dangerous goods.</p>
                </div>
                <div class="bg-gray-700 p-6 rounded-md shadow-md">
                    <h2 class="text-2xl font-semibold text-white mb-3">Module 2: Packaging</h2>
                    <p class="text-gray-400">Learn about proper packaging requirements and standards.</p>
                </div>
                <div class="bg-gray-700 p-6 rounded-md shadow-md">
                    <h2 class="text-2xl font-semibold text-white mb-3">Module 3: Documentation</h2>
                    <p class="text-gray-400">Master the essential paperwork for dangerous goods shipments.</p>
                </div>
            </div>
            <button id="startTrainingButton" class="mt-8 px-8 py-3 bg-cargojet-orange text-white font-bold rounded-full shadow-lg hover-cargojet-orange transition duration-300 focus:outline-none focus:ring-2 focus:ring-cargojet-orange focus:ring-opacity-75 cursor-pointer">
                Start Training
            </button>
        </section>

        <!-- Contact Form Section -->
        <section id="contact-section" class="bg-gray-800 p-8 rounded-lg shadow-xl mt-8">
            <h2 class="text-3xl font-bold text-cargojet-orange mb-6">Contact Us</h2>
            <p class="text-gray-300 text-lg mb-6">
                Have questions or need assistance? Please fill out the form below and we'll get back to you as soon as possible.
            </p>
            <form id="contactForm" class="space-y-6">
                <div>
                    <label for="name" class="block text-gray-300 text-sm font-medium mb-2">Your Name</label>
                    <input type="text" id="name" name="name" required
                           class="w-full p-3 rounded-md bg-gray-700 border border-gray-600 text-white focus:outline-none focus:ring-2 focus:ring-cargojet-orange">
                </div>
                <div>
                    <label for="email" class="block text-gray-300 text-sm font-medium mb-2">Your Email</label>
                    <input type="email" id="email" name="email" required
                           class="w-full p-3 rounded-md bg-gray-700 border border-gray-600 text-white focus:outline-none focus:ring-2 focus:ring-cargojet-orange">
                </div>
                <div>
                    <label for="message" class="block text-gray-300 text-sm font-medium mb-2">Your Message</label>
                    <textarea id="message" name="message" rows="5" required
                              class="w-full p-3 rounded-md bg-gray-700 border border-gray-600 text-white focus:outline-none focus:ring-2 focus:ring-cargojet-orange"></textarea>
                </div>
                <button type="submit"
                        class="px-8 py-3 bg-cargojet-orange text-white font-bold rounded-full shadow-lg hover-cargojet-orange transition duration-300 focus:outline-none focus:ring-2 focus:ring-cargojet-orange focus:ring-opacity-75">
                    Send Message
                </button>
            </form>
            <!-- Message box for form submission feedback -->
            <div id="messageBox" class="hidden mt-4 p-4 rounded-md text-center" role="alert"></div>
        </section>
    </main>

    <!-- Footer Section -->
    <footer class="bg-cargojet-dark py-6 px-6 md:px-12 mt-8 rounded-t-lg">
        <div class="container mx-auto text-center text-gray-400">
            <p>&copy; 2025 CargoJet Inspired App. All rights reserved.</p>
            <p class="mt-2 text-sm">Designed for a seamless user experience.</p>
        </div>
    </footer>

    <!-- Login Modal -->
    <div id="loginModal" class="modal">
        <div class="modal-content">
            <span class="close-button">&times;</span>
            <h2 class="text-2xl font-bold text-cargojet-orange mb-4">Sign In</h2>
            <form id="loginForm" class="space-y-4">
                <div>
                    <label for="username" class="block text-gray-300 text-sm font-medium mb-2">Username</label>
                    <input type="text" id="username" name="username" required
                           class="w-full p-3 rounded-md bg-gray-700 border border-gray-600 text-white focus:outline-none focus:ring-2 focus:ring-cargojet-orange">
                </div>
                <div>
                    <label for="password" class="block text-gray-300 text-sm font-medium mb-2">Password</label>
                    <input type="password" id="password" name="password" required
                           class="w-full p-3 rounded-md bg-gray-700 border border-gray-600 text-white focus:outline-none focus:ring-2 focus:ring-cargojet-orange">
                </div>
                <button type="submit"
                        class="w-full px-4 py-2 bg-cargojet-orange text-white font-bold rounded-full shadow-lg hover-cargojet-orange transition duration-300 focus:outline-none focus:ring-2 focus:ring-cargojet-orange focus:ring-opacity-75">
                    Login
                </button>
            </form>
            <div id="loginMessageBox" class="hidden mt-4 p-2 rounded-md text-center text-sm" role="alert"></div>
        </div>
    </div>

    <script>
        document.getElementById('contactForm').addEventListener('submit', function(event) {
            event.preventDefault(); // Prevent default form submission

            const name = document.getElementById('name').value;
            const email = document.getElementById('email').value;
            const message = document.getElementById('message').value;
            const messageBox = document.getElementById('messageBox');

            // In a real application, you would send this data to a backend server.
            // For example, using fetch API to a serverless function or a dedicated backend endpoint.
            // fetch('/api/send-email', {
            //     method: 'POST',
            //     headers: {
            //         'Content-Type': 'application/json'
            //     },
            //     body: JSON.stringify({ name, email, message })
            // })
            // .then(response => response.json())
            // .then(data => {
            //     if (data.success) {
            //         messageBox.textContent = 'Thank you for your message! We will get back to you soon.';
            //         messageBox.className = 'mt-4 p-4 rounded-md text-green-700 bg-green-100 block';
            //         document.getElementById('contactForm').reset(); // Clear the form
            //     } else {
            //         messageBox.textContent = 'There was an error sending your message. Please try again later.';
            //         messageBox.className = 'mt-4 p-4 rounded-md text-red-700 bg-red-100 block';
            //     }
            // })
            // .catch(error => {
            //     console.error('Error:', error);
            //     messageBox.textContent = 'Network error. Please check your connection and try again.';
            //     messageBox.className = 'mt-4 p-4 rounded-md text-red-700 bg-red-100 block';
            // });

            // --- Placeholder for client-side only demonstration ---
            // This part is for demonstration only. A real contact form needs a backend.
            console.log('Form Submitted:');
            console.log('Name:', name);
            console.log('Email:', email);
            console.log('Message:', message);
            console.log('Target Email: pblais@cargojet.com');

            messageBox.textContent = 'Thank you for your message! In a real application, this would be sent to pblais@cargojet.com via a backend service.';
            messageBox.className = 'mt-4 p-4 rounded-md text-green-700 bg-green-100 block';
            messageBox.style.backgroundColor = '#d1fae5'; /* Light green */
            messageBox.style.color = '#065f46'; /* Dark green text */
            document.getElementById('contactForm').reset(); // Clear the form
        });

        // Get the modal
        var modal = document.getElementById("loginModal");

        // Get the buttons that open the modal
        var signInBtn = document.getElementById("signInButton");
        var startTrainingBtn = document.getElementById("startTrainingButton");

        // Get the <span> element that closes the modal
        var span = document.getElementsByClassName("close-button")[0];

        // Function to open the modal
        function openModal() {
            modal.style.display = "flex"; // Use flexbox for centering
        }

        // Function to close the modal
        function closeModal() {
            modal.style.display = "none";
            document.getElementById('loginForm').reset(); // Clear the login form
            document.getElementById('loginMessageBox').classList.add('hidden'); // Hide any previous messages
        }

        // When the user clicks the button, open the modal
        signInBtn.onclick = openModal;
        startTrainingBtn.onclick = openModal;

        // When the user clicks on <span> (x), close the modal
        span.onclick = closeModal;

        // When the user clicks anywhere outside of the modal, close it
        window.onclick = function(event) {
            if (event.target == modal) {
                closeModal();
            }
        }

        // Handle the login form submission
        document.getElementById('loginForm').addEventListener('submit', function(event) {
            event.preventDefault(); // Prevent default form submission

            const username = document.getElementById('username').value;
            const password = document.getElementById('password').value;
            const loginMessageBox = document.getElementById('loginMessageBox');

            // --- Placeholder for client-side only login logic ---
            // In a real application, you would send the username and password
            // to a backend for authentication and authorization.
            console.log('Login Attempt:');
            console.log('Username:', username);
            console.log('Password:', password);

            // Basic validation and placeholder success/failure message
            if (username === 'testuser' && password === 'password123') {
                loginMessageBox.textContent = 'Login successful!';
                loginMessageBox.className = 'mt-4 p-2 rounded-md text-green-700 bg-green-100 block';
                // In a real app, redirect to a dashboard or training page
                // window.location.href = '/training-dashboard';
            } else {
                loginMessageBox.textContent = 'Invalid username or password.';
                loginMessageBox.className = 'mt-4 p-2 rounded-md text-red-700 bg-red-100 block';
            }
        });

    </script>

</body>
</html>
